swagger: '2.0'
info:
  version: 0.0.1
  title: NLMG API
  description: New Lion HighSchool Sports App API.
host: localhost:8280
basePath: /v1
# basePath: /api
schemes:
  - http
  - https
produces:
  - application/json
securityDefinitions:
  seasonLinkInternal:
    type: oauth2
    description: >
      Exchanges an email/password for an access_token. Only
      to be used by the SeasonLink app.
    # name: access_token
    # in: header
    flow: password
    tokenUrl: http://localhost:8280/v1/login
    scopes: {}
paths:
  /me:
    get:
      summary: Returns the current logged in user.
      operationId: me
      security:
        - seasonLinkInternal: []
      responses:
        200:
          description: User summary
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                description: User Model
                $ref: User
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /login:
    post:
      summary: Exchange a username (i.e. email) and password for an access token.
      description: >
        Logging in will return just the access_token in the
        response when successful. Follow up with a call to `/me` if you
        want to get the user details.
      parameters:
        - name: email
          in: formData
          description: >
            The user's email. SeasonLink does not have usernames,
            but the OAuth2 spec requires this to be the param name.
          required: true
          type: string
        - name: password
          in: formData
          description: The user's password.
          required: true
          type: string
      responses:
        200:
          description: Returns the access_token
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                properties:
                  access_token:
                    type: string
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /signup:
    post:
      summary: Creates a new user account.
      description: >
        Creating a new user will return an object containing the user
        and the access_token in the response when successful.
      parameters:
        - name: firstName
          in: formData
          description: First name of the user.
          required: false
          type: string
        - name: lastName
          in: formData
          description: Last name of the user.
          required: false
          type: string
        - name: password
          in: formData
          description: The user's password.
          required: true
          type: string
        - name: email
          in: formData
          description: The user's email address.
          required: true
          type: string
      responses:
        200:
          description: Returns the access_token for the new user.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                properties:
                  user:
                    $ref: User
                  access_token:
                    type: string
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /users:
    get:
      description: Returns array of Users.
      summary: Retrieve Users.
      operationId: getUsersList
      responses:
        200:
          description: List all users.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                type: array
                items:
                  $ref: User
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /users/{userId}:
    get:
      parameters:
      - name: userId
        in: path
        description: the Id of the User
        required: true
        type: string
      description: Returns a User based on supplied Id.
      summary: Retrieve a User Object.
      operationId: getUserById
      responses:
        200:
          description:  Return a User.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                $ref: User
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /teams:
    get:
      description: Returns array of Teams.
      summary: Retrieve Teams.
      operationId: getTeamsList
      responses:
        200:
          description: List all Teams.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                type: array
                items:
                  $ref: Team
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /teams/search:
    get:
      parameters:
      - name: q
        in: query
        description: case insensitve text search (Optional)
        required: false
        type: string
      - name: schoolId
        in: query
        description: case sensitve schoolId search (Optional)
        required: false
        type: string
      - name: sport
        in: query
        description: case sensitve sport search (Optional)
        required: false
        type: string
      - name: season
        in: query
        description: case sensitve season search (Optional)
        required: false
        type: string
      - name: level
        in: query
        description: case sensitve level search (Optional)
        required: false
        type: string
      - name: gender
        in: query
        description: case sensitve gender search (Optional)
        required: false
        type: string
      - name: mascot
        in: query
        description: case sensitve mascot search (Optional)
        required: false
        type: string
      description: |
        Returns an array of Teams matching supplied query. Query can be a case insensitve text search and/or a case sensitive key/value pair.
      summary: Retrieve Teams based on search terms or key values
      operationId: getTeamsByQuery
      responses:
        200:
          description: List results
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                type: array
                items:
                  $ref: Team

  /teams/follow/{teamId}:
    get:
      parameters:
      - name: teamId
        in: path
        description: the Id of the Team
        required: true
        type: string
      description: Applies teamId to User's followed teams.
      operationId: followTeamById
      responses:
        200:
          description: Return a User.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                $ref: User
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /teams/unfollow/{teamId}:
    get:
      parameters:
      - name: teamId
        in: path
        description: the Id of the Team
        required: true
        type: string
      description: Removes teamId from User's followed teams.
      operationId: unfollowTeamById
      responses:
        200:
          description: Return a User.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                $ref: User
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /teams/{teamId}:
    get:
      parameters:
      - name: teamId
        in: path
        description: the Id of the Team
        required: true
        type: string
      description: Returns a Team based on supplied Id.
      summary: Retrieve a Team Object.
      operationId: getTeamById
      responses:
        200:
          description: Return a Team.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                $ref: Team
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /schools:
    get:
      description: Returns array of Schools.
      summary: Retrieve Schools.
      operationId: getSchoolsList
      responses:
        200:
          description: List all Schools.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                type: array
                items:
                  $ref: School
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /schools/search:
    get:
      parameters:
      - name: q
        in: query
        description: case insensitve text search (Optional)
        required: false
        type: string
      - name: fullName
        in: query
        description: case sensitve fullName search (Optional)
        type: string
      - name: shortName
        in: query
        description: case sensitve shortName search (Optional)
        type: string
      - name: initials
        in: query
        description: case sensitve initials search (Optional)
        type: string
      - name: city
        in: query
        description: case sensitve city search (Optional)
        type: string
      - name: state
        in: query
        description: case sensitve state search (Optional)
        type: string
      - name: zip
        in: query
        description: case sensitve zip search (Optional)
        type: string
      - name: division
        in: query
        description: case sensitve division search (Optional)
        type: string
      - name: mascot
        in: query
        description: case sensitve mascot search (Optional)
        type: string
      - name: logoColorDark
        in: query
        description: case sensitve logoColorDark search (Optional)
        type: string
      - name: logoColorLight
        in: query
        description: case sensitve logoColorLight search (Optional)
        type: string
      - name: storeLink
        in: query
        description: case sensitve storeLink search (Optional)
        type: string
      description: |
        Returns an array of Schools matching supplied query. Query can
        be a case insensitve text search and/or a case sensitive
        key/value pair.
      summary: Retrieve Schools based on search terms or key values
      operationId: getSchoolsByQuery
      responses:
        200:
          description: List results
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                type: array
                items:
                  $ref: School

  /schools/{schoolId}:
    get:
      parameters:
      - name: schoolId
        in: path
        description: the Id of the School
        required: true
        type: string
      description: Returns a School based on supplied Id.
      summary: Retrieve a School Object.
      operationId: getSchoolById
      responses:
        200:
          description: Return a School.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                $ref: School
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /events:
    get:
      description: Returns array of Events.
      summary: Retrieve Events.
      operationId: getEventsList
      responses:
        200:
          description: List all Events.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                type: array
                items:
                  $ref: Event
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /events/search:
    get:
      parameters:
      - name: q
        in: query
        description: case insensitve text search (Optional)
        required: false
        type: string
      - name: name
        in: query
        description: case sensitive name search (Optional)
        type: string
      - name: schoolIds
        in: query
        description: case sensitive schoolIds search (Optional)
        type: string
      - name: teamIds
        in: query
        description: case sensitive teamIds search (Optional)
        type: string
      - name: homeSchoolId
        in: query
        description: case sensitive homeSchoolId search (Optional)
        type: string
      - name: homeTeamId
        in: query
        description: case sensitive homeTeamId search (Optional)
        type: string
      - name: type
        in: query
        description: case sensitive type search (Optional)
        type: string
      - name: description
        in: query
        description: case sensitive description search (Optional)
        type: string
      - name: date
        in: query
        description: case sensitive date search (Optional)
        type: string
      - name: startTime
        in: query
        description: case sensitive startTime search (Optional)
        type: string
      - name: endTime
        in: query
        description: case sensitive endTime search (Optional)
        type: string
      - name: rescheduled
        in: query
        description: case sensitive rescheduled search (Optional)
        type: string
      - name: dateAdded
        in: query
        description: case sensitive dateAdded search (Optional)
        type: string
      - name: locationId
        in: query
        description: case sensitive locationId search (Optional)
        type: string
      - name: score
        in: query
        description: case sensitive score search (Optional)
        type: string
      - name: stats
        in: query
        description: case sensitive stats search (Optional)
        type: string
      description: |
        Returns an array of Events matching supplied query. Query can
        be a case insensitve text search and/or a case sensitive
        key/value pair.
      summary: Retrieve Events based on search terms or key values
      operationId: getEventsByQuery
      responses:
        200:
          description: List results
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                type: array
                items:
                  $ref: Event

  /events/{eventId}:
    get:
      parameters:
      - name: eventId
        in: path
        description: the Id of the Event
        required: true
        type: string
      description: Returns a Event based on supplied Id.
      summary: Retrieve a Event Object.
      operationId: getEventById
      responses:
        200:
          description: Return a Event.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                $ref: Event
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /messages:
    get:
      description: Returns array of Messages.
      summary: Retrieve Messages.
      operationId: getMessagesList
      responses:
        200:
          description: List all Messages.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                type: array
                items:
                  $ref: Message
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

  /messages/search:
    get:
      parameters:
      - name: q
        in: query
        description: case insensitve text search (Optional)
        required: false
        type: string
      - name: type
        in: query
        description: case sensitve type search (Optional)
        type: string
      - name: eventId
        in: query
        description: case sensitve eventId search (Optional)
        type: string
      - name: schoolId
        in: query
        description: case sensitve schoolId search (Optional)
        type: string
      - name: teamIds
        in: query
        description: case sensitve teamIds search (Optional)
        type: string
      - name: creator
        in: query
        description: case sensitve creator search (Optional)
        type: string
      - name: source
        in: query
        description: case sensitve source search (Optional)
        type: string
      - name: content
        in: query
        description: case sensitve content search (Optional)
        type: string
      - name: channels
        in: query
        description: case sensitve channels search (Optional)
        type: string
      - name: channelContent
        in: query
        description: case sensitve channelContent search (Optional)
        type: string
      - name: publishTime
        in: query
        description: case sensitve publishTime search (Optional)
        type: string
      - name: expireTime
        in: query
        description: case sensitve expireTime search (Optional)
        type: string
      - name: status
        in: query
        description: case sensitve status search (Optional)
        type: string
      - name: inappropriate
        in: query
        description: case sensitve inappropriate search (Optional)
        type: string
      description: |
        Returns an array of Events matching supplied query. Query can
        be a case insensitve text search and/or a case sensitive
        key/value pair.
      summary: Retrieve Events based on search terms or key values
      operationId: getEventsByQuery
      responses:
        200:
          description: List results
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                type: array
                items:
                  $ref: Event

  /messages/{messageId}:
    get:
      parameters:
      - name: messageId
        in: path
        description: the Id of the Message
        required: true
        type: string
      description: Returns a Message based on supplied Id.
      summary: Retrieve a Message Object.
      operationId: getMessageById
      responses:
        200:
          description: Return a Message.
          schema:
            $ref: SuccessEnvelope
            properties:
              meta:
                type: object
              response:
                $ref: Message
        default:
          description: The standard error envelope.
          schema:
            $ref: ErrorEnvelope

definitions:
  ErrorEnvelope:
    description: API error envelope response
    required:
      - meta
    properties:
      meta:
        description: meta data of the error envelope
        type: object
        required:
          - code
          - errorType
          - errorDetail
        properties:
          code:
            type: integer
            format: int32
          errorType:
            description: "Additional information about what went wrong, intended for the developer."
            type: string
          errorDetail:
            description: A localized string intended for the client to display back to the user directly.
            type: string

  SuccessEnvelope:
    description: API success envelope response
    required:
      - meta
      - response
    properties:
      meta:
        description: meta data of the sucess envelope
        type: object
        required:
          - code
        properties:
          code:
            type: integer
            format: int32
      response:
        description: response data of successful API call
        type: object

  User:
    description: User Object
    required:
      - email
      - password
    properties:
      username:
        description: Username of User
        type: string
      firstName:
        description: First name of User
        type: string
      lastName:
        description: Last name of User
        type: string
      email:
        description: Email address of User
        type: string
      password:
        description: Salted passward hash of User
        type: string
      accounts:
        description: List of accounts associated with User
        type: array
        items:
          type: object
      devices:
        description: List of devices associated with User
        type: array
        items:
          type: object
      roles:
        description: List of roles associated with User
        type: array
        items:
          type: object
      createdTime:
        description: Date of User model creation
        type: string
        format: date-time
      lastVisitTime:
        description: Date of User's last visit
        type: string
        format: date-time
      birthday:
        description: Date of User's birthday
        type: string
        format: date-time
      followedTeams:
        description: List of Mongodb ObjectIds of teams followed
        type: array
        items:
          $ref:  ObjectId
      preferences:
        description: List of User preference objects
        type: array
        items:
          $ref: NotificationPreference

  Team:
    description: Team Object
    required:
      - schoolId
      - sport
      - season
      - level
      - gender
    properties:
      schoolId:
        description: Mongodb ObjectId of School this Team belongs too
        $ref: ObjectId
      sport:
        description: The sport this Team is associated with
        type: string
      season:
        description: The season of this Team's sport
        type: string
      level:
        description: The Team's level of play (Frosh, JV, Varsity)
        type: string
      gender:
        description: The gender of this Team (Male, Female)
        type: string
      mascot:
        description: The Team's mascot
        type: string

  School:
    description: School Object
    required:
      - fullName
      - city
      - state
      - zip
    properties:
      fullName:
        description: Full name of School
        type: string
      shortName:
        description: Short name of School
        type: string
      initials:
        description: Initials of School
        type: string
      city:
        description: City School is located in
        type: string
      state:
        description: State School is located in
        type: string
      zip:
        description: Zip/Postal code of School's location
        type: string
      division:
        description: Division of School
        type: string
      mascot:
        description: Mascot of School
        type: string
      logoColorDark:
        description: Dark color of School's colors
        type: string
      logoColorLight:
        description: Light color of School's colors
        type: string
      storeLink:
        description: Link to School's store
        type: string

  Event:
    description: Event Object
    required:
      - name
      - schoolIds
      - teamIds
      - homeSchoolId
      - homeTeamId
      - type
      - description
      - date
      - startTime
    properties:
      name:
        description: Name of Event
        type: string
      schoolIds:
        description: List of Schools associated with Event
        type: array
        items:
          $ref: ObjectId
      teamIds:
        description: List of Teams associated with Event
        type: array
        items:
          $ref: ObjectId
      homeSchoolId:
        description: Mongodb ObjectId of home School associated with this Event
        $ref: ObjectId
      homeTeamId:
        description: Mongodb ObjectId of the home Team associated with this Event
        $ref: ObjectId
      type:
        description: The type of Event, i.e. Game/Practice/etc.
        type: string
      description:
        description: The desctiption of the Event.
        type: string
      date:
        description: The date of the Event
        type: string
        format: date-time
      startTime:
        description: The start time of the Event
        type: string
        format: date-time
      endTime:
        description: The end time of the Event
        type: string
        format: date-time
      rescheduled:
        description: A boolean indicating if this Event has been rescheduled
        type: boolean
      dateAdded:
        description: The date this Event was created
        type: string
        format: date-time
      locationId:
        description: Mongodb ObjectId of the Location of this Event
        $ref: ObjectId
      score:
        description: The score (if applicable) of this Event
        type: string
      stats:
        description: The stats object(s) of this Event
        type: object

  Message:
    description: Message Object
    required:
      - type
      - creator
      - source
      - content
    properties:
      type:
        description: The type of Message
        type: string
      eventId:
        description: Mongodb ObjectId of Event associated with this Message
        $ref:  ObjectId
      schoolId:
        description: Mongodb ObjectId of School associated with this Message
        $ref: ObjectId
      teamIds:
        description: List of Team ObjectIds associated with this Message
        type: array
        items:
          $ref: ObjectId
      creator:
        description: Mongodb ObjectId of User who created this Message
        $ref: ObjectId
      source:
        description: The source of this Message
        type: string
      content:
        description: The content of this Message
        type: string
      channels:
        description: The channels associated with this Message
        type: string
      channelContent:
        description: The channel content of this Message
        type: string
      publishTime:
        description: The date this Message was published
        type: string
        format: date-time
      expireTime:
        description: The date this Message expiress
        type: string
        format: date-time
      status:
        description: the status of this Message
        type: string
      inappropriate:
        description: Boolean flag indicating if Message is or is not appropriate
        type: boolean

  NotificationPreference:
    description: User's Notification Preferences Object
    required:
      - enabled
      - scope
      - group
      - email
      - push
      - sms
    properties:
      enabled:
        description: Overall on/off boolean of this NotificationPreference
        type: boolean
      scope:
        description: Scope of NotificationPreference (global, team, school, etc.)
        type: string
      group:
        description: User's group setting of this NotificationPreference (player, fan, coach, etc.)
        type: string
      school:
        description: Mongodb ObjectId of School associated with this NotificationPreference
        $ref: ObjectId
      team:
        description: Mongodb ObjectId of Team associated with this NotificationPreference
        $ref: ObjectId
      email:
        description: Boolean flag indicating email notification preference
        type: boolean
      push:
        description: Boolean flag indicating push notification preference
        type: boolean
      sms:
        description: Boolean flag indicating sms notification preference
        type: boolean

  ObjectId:
    description: Mongodb ObjectId definition
    properties:
      id:
        description: Id attribute of ObjectId
        type: string
